// Code generated by moq; DO NOT EDIT
// github.com/matryer/moq

package apitest

import (
	"github.com/ONSdigital/dp-dataset-api/api"
	"github.com/ONSdigital/dp-dataset-api/store"
	"github.com/gorilla/mux"
	"sync"
)

var (
	lockAPIMockCreateDatasetAPI sync.RWMutex
)

// APIMock is a mock implementation of API.
//
//     func TestSomethingThatUsesAPI(t *testing.T) {
//
//         // make and configure a mocked API
//         mockedAPI := &APIMock{
//             CreateDatasetAPIFunc: func(in1 string, in2 *mux.Router, in3 store.DataStore) *api.DatasetAPI {
// 	               panic("TODO: mock out the CreateDatasetAPI method")
//             },
//         }
//
//         // TODO: use mockedAPI in code that requires API
//         //       and then make assertions.
//
//     }
type APIMock struct {
	// CreateDatasetAPIFunc mocks the CreateDatasetAPI method.
	CreateDatasetAPIFunc func(in1 string, in2 *mux.Router, in3 store.DataStore) *api.DatasetAPI

	// calls tracks calls to the methods.
	calls struct {
		// CreateDatasetAPI holds details about calls to the CreateDatasetAPI method.
		CreateDatasetAPI []struct {
			// In1 is the in1 argument value.
			In1 string
			// In2 is the in2 argument value.
			In2 *mux.Router
			// In3 is the in3 argument value.
			In3 store.DataStore
		}
	}
}

// CreateDatasetAPI calls CreateDatasetAPIFunc.
func (mock *APIMock) CreateDatasetAPI(in1 string, in2 *mux.Router, in3 store.DataStore) *api.DatasetAPI {
	if mock.CreateDatasetAPIFunc == nil {
		panic("moq: APIMock.CreateDatasetAPIFunc is nil but API.CreateDatasetAPI was just called")
	}
	callInfo := struct {
		In1 string
		In2 *mux.Router
		In3 store.DataStore
	}{
		In1: in1,
		In2: in2,
		In3: in3,
	}
	lockAPIMockCreateDatasetAPI.Lock()
	mock.calls.CreateDatasetAPI = append(mock.calls.CreateDatasetAPI, callInfo)
	lockAPIMockCreateDatasetAPI.Unlock()
	return mock.CreateDatasetAPIFunc(in1, in2, in3)
}

// CreateDatasetAPICalls gets all the calls that were made to CreateDatasetAPI.
// Check the length with:
//     len(mockedAPI.CreateDatasetAPICalls())
func (mock *APIMock) CreateDatasetAPICalls() []struct {
	In1 string
	In2 *mux.Router
	In3 store.DataStore
} {
	var calls []struct {
		In1 string
		In2 *mux.Router
		In3 store.DataStore
	}
	lockAPIMockCreateDatasetAPI.RLock()
	calls = mock.calls.CreateDatasetAPI
	lockAPIMockCreateDatasetAPI.RUnlock()
	return calls
}
